/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */


import '@stencil/core';




export namespace Components {

  interface AdoboTextfield {
    'dense': boolean;
    'disabled': boolean;
    'focused': boolean;
    'fullwidth': boolean;
    'helpertext': string;
    'icon': string;
    'iconposition': string;
    'label': string;
    'labelposition': string;
    'minlength': number;
    'outlined': boolean;
    'required': boolean;
    'showbox': boolean;
    'textarea': boolean;
    'type': string;
    'value': string;
  }
  interface AdoboTextfieldAttributes extends StencilHTMLAttributes {
    'dense'?: boolean;
    'disabled'?: boolean;
    'focused'?: boolean;
    'fullwidth'?: boolean;
    'helpertext'?: string;
    'icon'?: string;
    'iconposition'?: string;
    'label'?: string;
    'labelposition'?: string;
    'minlength'?: number;
    'onSelected'?: (event: CustomEvent) => void;
    'outlined'?: boolean;
    'required'?: boolean;
    'showbox'?: boolean;
    'textarea'?: boolean;
    'type'?: string;
    'value'?: string;
  }
}

declare global {
  interface StencilElementInterfaces {
    'AdoboTextfield': Components.AdoboTextfield;
  }

  interface StencilIntrinsicElements {
    'adobo-textfield': Components.AdoboTextfieldAttributes;
  }


  interface HTMLAdoboTextfieldElement extends Components.AdoboTextfield, HTMLStencilElement {}
  var HTMLAdoboTextfieldElement: {
    prototype: HTMLAdoboTextfieldElement;
    new (): HTMLAdoboTextfieldElement;
  };

  interface HTMLElementTagNameMap {
    'adobo-textfield': HTMLAdoboTextfieldElement
  }

  interface ElementTagNameMap {
    'adobo-textfield': HTMLAdoboTextfieldElement;
  }


  export namespace JSX {
    export interface Element {}
    export interface IntrinsicElements extends StencilIntrinsicElements {
      [tagName: string]: any;
    }
  }
  export interface HTMLAttributes extends StencilHTMLAttributes {}

}
